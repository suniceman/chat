<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

    <!-- 配置静态资源的访问路径 -->
    <!-- js,css,image,html等 *：该目录下所有文件 **:目录下及其以下任意子目录 -->
    <mvc:resources location="/js/*" mapping="/js/*" />
    <mvc:resources location="/img/*" mapping="/img/*" />

    <!-- 注解映射器和注解适配器 -->
    <!-- 注解驱动 已经对json进行了参数绑定 conversion-service:设定参数绑定 客户端到服务器的参数的类型传递 -->
    <mvc:annotation-driven validator="myvalidator"></mvc:annotation-driven>

    <!-- 加载包com.suniceman.controller中所有的处理器 -->
    <context:component-scan base-package="com.suniceman.controller"></context:component-scan>
    <context:component-scan base-package="com.suniceman.socket.sender"></context:component-scan>
    
    <!--<bean class="com.suniceman.controller.StudentController"> <property name="stuService"
        ref="xx"></property> </bean> -->
    <!-- 配置视图解析器 -->
    <bean
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>

    <!-- 文件解析器 -->
    <bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize">
            <value>8888888888</value>
        </property>
    </bean>

    <!-- 配置校验器 使用hibernate中的校验器 在hibernate-validator-x.x.jar org.hibernate.validator.HibernateValidator
        在spring-context-x.x.jar包中 org.springframework.validation.beanvalidation.LocalValidatorFactoryBean -->
    <bean id="myvalidator"
        class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"></property>
        <property name="validationMessageSource" ref="messageSource"></property>
    </bean>

    <!-- 配置校验失败的错误信息的文件 在spring-context-x.x.jar包中 org.springframework.context.support.ReloadableResourceBundleMessageSource -->
    <bean id="messageSource"
        class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <!-- 加载消息资源包 -->
        <property name="basenames">
            <list>
                <value>classpath:errormessage</value>
            </list>
        </property>
        <property name="defaultEncoding" value="UTF-8"></property>
    </bean>

    <!-- 配置拦截器
     -->
  <!--   <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/back/*"/>
            <mvc:exclude-mapping path="/back/login.action"/>
            <mvc:exclude-mapping path="/back/dologin.action"/>
            <bean class="com.suniceman.interceptor.BackSessionInterceptor"></bean>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/order/*" />
            <mvc:mapping path="/shopcart/*" />
            <mvc:mapping path="/book/*" />
            <mvc:exclude-mapping path="/book/showOne.action"/>
            <bean class="com.suniceman.interceptor.SessionInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors> -->
</beans>